"""add reseller_prefix to api model

Revision ID: 706d868a2e3f
Revises: d22713f1083b
Create Date: 2024-08-15 09:06:44.147952

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "706d868a2e3f"
down_revision = "d22713f1083b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("api_report", schema=None) as batch_op:
        batch_op.drop_index("apidx_user_id_month")
        batch_op.drop_index("ix_api_report_user_id")

    op.drop_table("api_report")
    with op.batch_alter_table("blast_report", schema=None) as batch_op:
        batch_op.drop_index("blastix_user_id_month")
        batch_op.drop_index("ix_blast_report_user_id")

    op.drop_table("blast_report")
    with op.batch_alter_table("esme_report", schema=None) as batch_op:
        batch_op.drop_index("esmeix_user_id_month")
        batch_op.drop_index("ix_esme_report_user_id")

    op.drop_table("esme_report")
    with op.batch_alter_table("api_client", schema=None) as batch_op:
        batch_op.add_column(sa.Column("reseller_prefix", sa.String(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("api_client", schema=None) as batch_op:
        batch_op.drop_column("reseller_prefix")

    op.create_table(
        "esme_report",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("network", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("total_pages", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("month", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["esme_client.id"], name="esme_report_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="esme_report_pkey"),
    )
    with op.batch_alter_table("esme_report", schema=None) as batch_op:
        batch_op.create_index("ix_esme_report_user_id", ["user_id"], unique=False)
        batch_op.create_index("esmeix_user_id_month", ["user_id", "month"], unique=False)

    op.create_table(
        "blast_report",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("message", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("sent_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("sender", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("total_pages", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("month", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["blast_client.id"], name="blast_report_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="blast_report_pkey"),
    )
    with op.batch_alter_table("blast_report", schema=None) as batch_op:
        batch_op.create_index("ix_blast_report_user_id", ["user_id"], unique=False)
        batch_op.create_index("blastix_user_id_month", ["user_id", "month"], unique=False)

    op.create_table(
        "api_report",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("network", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("total_pages", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("month", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["api_client.id"], name="api_report_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="api_report_pkey"),
    )
    with op.batch_alter_table("api_report", schema=None) as batch_op:
        batch_op.create_index("ix_api_report_user_id", ["user_id"], unique=False)
        batch_op.create_index("apidx_user_id_month", ["user_id", "month"], unique=False)

    # ### end Alembic commands ###
